[project]
authors = [
    {name = "wangsen.0914", email = "wangsen.0914@bytedance.com"},
]
requires-python = "<4.0,>=3.10"
dependencies = [
    "langchain-core>=0.3.35",
    "langchain>=0.1.0",
    "fastapi<1.0.0,>=0.100.0",
    "uvicorn<0.30.0,>=0.22.0",
    "opentelemetry-api<2.0.0,>=1.22.0",
    "pydantic<3.0.0,>=2.0.0",
    "opentelemetry-exporter-otlp<2.0.0,>=1.22.0",
    "jinja2<4.0.0,>=3.1.2",
    "structlog<25.0.0,>=23.1.0",
    "opentelemetry-sdk<2.0.0,>=1.22.0",
    "volcengine-python-sdk>=3.0.10",
    "httpx>=0.27.0",
    "pytz>=2020.5",
    "tenacity==8.3.0",
    "uvloop>=0.19.0; sys_platform != \"win32\"",
    "orjson<3.10.7",
    "aiofiles==23.2.1",
    "tos<3.0.0,>=2.8.1",
    "mcp>=1.8.1",
    "aiohttp>=3.11.13",
    "websockets>=14.0",
    "redis>=6.1.0",
]
name = "arkitect"
version = "0.2.2"
description = ""
readme = "README.md"

[tool.pdm.build]
includes = ["arkitect"]
[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.ruff]
lint.select = [
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
]
exclude = ["ark/core/component/prompts"]

[tool.mypy]
disallow_untyped_defs = "True"
ignore_missing_imports = "True"
exclude = ["tests", "scripts", "ark/core/component/tts", "ark/core/component/asr"]

[tool.coverage.run]
omit = [
    "tests/*",
]

[tool.pytest.ini_options]
# --strict-markers will raise errors on unknown marks.
# https://docs.pytest.org/en/7.1.x/how-to/mark.html#raising-errors-on-unknown-marks
#
# https://docs.pytest.org/en/7.1.x/reference/reference.html
# --strict-config       any warnings encountered while parsing the `pytest`
#                       section of the configuration file raise errors.
#
# https://github.com/tophat/syrupy
# --snapshot-warn-unused    Prints a warning on unused snapshots rather than fail the test suite.
addopts = "--snapshot-warn-unused --strict-markers --strict-config --durations=5"
# Registering custom markers.
# https://docs.pytest.org/en/7.1.x/example/markers.html#registering-markers
markers = [
    "requires: mark tests as requiring a specific library",
    "asyncio: mark tests as requiring asyncio",
    "compile: mark placeholder test used to compile integration tests without running them",
]
asyncio_mode = "auto"


[dependency-groups]
lint = [
    "ruff<1.0.0,>=0.1.5",
    "mypy<2.0.0,>=1.8.0",
    "types-six>=1.17.0.20250304",
    "types-pytz>=2025.1.0.20250204",
    "codespell>=2.4.1",
]
typing = [
    "types-pyyaml<7.0.0.0,>=6.0.12.2",
    "types-requests<3.0.0.0,>=2.28.11.5",
]
test = [
    "pytest<8.0.0,>=7.3.0",
    "freezegun<2.0.0,>=1.2.2",
    "pytest-mock<4.0.0,>=3.10.0",
    "syrupy<5.0.0,>=4.0.2",
    "pytest-watcher<1.0.0,>=0.3.4",
    "pytest-asyncio<1.0.0,>=0.21.1",
    "grandalf<1.0,>=0.8",
    "watchdog==4.0.1",
]
